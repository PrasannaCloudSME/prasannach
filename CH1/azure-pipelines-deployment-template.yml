parameters: # defaults for any parameters that aren't specified
  applicationInsightsApiKey: '$(ApplicationInsights--ApplicationIdDev)'
  applicationInsightsApplicationId: '$(ApplicationInsights--ApplicationIdDev)'
  applicationInsightsInstrumentationKey: $(ApplicationInsights--InstrumentationKeyDev)
  applicationInsightsLocation: 'East US'
  ASPNETCOREEnvironmentSetting: 'Release'
  cognitiveServicesSubscriptionKey: '***secret'
  environment: 'Dev'  
  environmentLowercase: 'dev'
  databaseLoginName: '***secret'
  keyVaultName: 'Prasanna-data-eu-keyvault'
  keyVaultURL: 'https://Prasanna-data-eu-keyvault.vault.azure.net/'
  keyVaultClientId: '***secret'
  keyVaultClientSecret: '***secret'
  imagesStorageURL: 'https://Prasannadeveustorage.blob.core.windows.net/partimages'
  partImagesContainerName: 'partimages'
  setImagesContainerName: 'setimages'
  redisCacheConnectionString: '***secret'
  resourceGroupName: 'PrasannaRG'
  resourceGroupLocation: 'East US'
  resourceGroupLocationShort: 'eu'
  roleAssignmentId: 'b24988ac-6180-42a0-ab88-20f7382dd24c'
  samsAppConnectionString: '***secret'
  serviceName: 'Prasanna-dev-eu-service'
  serviceStagingUrl: 'https://Prasanna-dev-eu-service-staging.azurewebsites.net/'
  serviceUrl: 'https://Prasanna-dev-eu-service.azurewebsites.net/'
  service2Name: 'Prasanna-dev2-eu-service'
  service2StagingUrl: 'https://Prasanna-dev2-eu-service-staging.azurewebsites.net/'
  service2Url: 'https://Prasanna-dev2-eu-service.azurewebsites.net/'
  stagingSlotName: 'Staging'
  storageAccountName: 'Prasannadeveustorage'
  storageAccountKey: '***secret'
  userPrincipalLogin: '***secret'
  vmImage: 'windows-latest'
  websiteName: 'Prasanna-dev-eu-web'
  websiteDomainName: 'dev.Prasannaazure.com'
  websiteStagingUrl: 'https://Prasanna-dev-eu-web-staging.azurewebsites.net/'
  websiteUrl: 'https://Prasanna-dev-eu-web.azurewebsites.net/'
  
 
jobs:
  - deployment: DeployCoreInfrastructure
    displayName: "Deploy key vault and storage"
    environment: ${{parameters.environment}}
    pool:
      vmImage: windows-latest    
    strategy:
      runOnce:
        deploy:
          steps:
          - task: DownloadBuildArtifacts@0
            displayName: 'Download the build artifacts'
            inputs:
              buildType: 'current'
              downloadType: 'single'
              artifactName: 'drop'
              downloadPath: '$(build.artifactstagingdirectory)'
          - task: dutchworkz.DisplayAllVariables.DisplayAllVariables.DutchWorkzToolsAllVariables@1
            displayName: 'Show all build variables in build output.'
          - task: AzurePowerShell@4 
            displayName: 'Run Azure PowerShell to remove deployments older than 30 days' #This addresses a deployment quota limit: https://docs.microsoft.com/en-us/azure/azure-resource-manager/templates/deployment-quota-exceeded
            inputs:
              azureSubscription: 'Prasanna connection to Azure Portal'
              ScriptPath: '$(build.artifactstagingdirectory)/drop/EnvironmentARMTemplate/PowerShell/DeploymentCleanup.ps1'
              ScriptArguments: '-ResourceGroupName "${{parameters.resourceGroupName}}"'
              azurePowerShellVersion: LatestVersion
          - task: AzureCLI@2
            displayName: 'Deploy infrastructure with ARM templates'
            inputs:
              azureSubscription: 'Prasanna connection to Azure Portal'
              scriptType: ps
              scriptPath: $(build.artifactstagingdirectory)\drop\EnvironmentARMTemplate\PowerShell\DeployInfrastructureCore.ps1
              arguments: -appPrefix "Prasanna" -environment "${{parameters.environmentLowercase}}" -resourceGroupName "${{parameters.resourceGroupName}}" -resourceGroupLocation "${{parameters.resourceGroupLocation}}" -resourceGroupLocationShort "${{parameters.resourceGroupLocationShort}}" -dataKeyVaultName "${{parameters.keyVaultName}}" -templatesLocation "$(build.artifactstagingdirectory)\drop\EnvironmentARMTemplate\Templates" -administratorUserSid "076f7430-ef4f-44e0-aaa7-d00c0f75b0b8" -azureDevOpsPrincipalId "e60b0582-1d81-4ab3-92db-fbdc53ddeb92"
            enabled: true



 

  - deployment: DeployWebServiceApp
    displayName: "Deploy webservice app"
    environment: ${{parameters.environment}}
    dependsOn: 
    - DeployInfrastructureWebCore
    pool:
      vmImage: windows-latest        
    variables:
      AppSettings.Environment: ${{parameters.environment}}
      AppSettings.KeyVaultURL: ${{parameters.keyVaultURL}}
      AppSettings.StorageAccountName: ${{parameters.storageAccountName}}
      AppSettings.CognitiveServicesSubscriptionKey: ${{parameters.cognitiveServicesSubscriptionKey}}
      AppSettings.CaptureStartErrors: ${{parameters.captureStartErrors}}
    strategy:
      runOnce:
        deploy:
          steps:
          - task: DownloadBuildArtifacts@0
            displayName: 'Download the build artifacts'
            inputs:
              buildType: 'current'
              downloadType: 'single'
              artifactName: 'drop'
              downloadPath: '$(build.artifactstagingdirectory)'
          - task: AzureCLI@2
            displayName: 'Deploy infrastructure with ARM templates'
            inputs:
              azureSubscription: 'SamLearnsAzure connection to Azure Portal'
              scriptType: ps
              scriptPath: $(build.artifactstagingdirectory)\drop\EnvironmentARMTemplate\PowerShell\DeployInfrastructureWebService.ps1
              arguments: -appPrefix "Prasanna" -environment "${{parameters.environmentLowercase}}" -webAppEnvironment "${{parameters.environmentLowercase}}" -resourceGroupName "${{parameters.resourceGroupName}}" -resourceGroupLocation "${{parameters.resourceGroupLocation}}" -resourceGroupLocationShort "${{parameters.resourceGroupLocationShort}}" -dataKeyVaultName "${{parameters.keyVaultName}}" -templatesLocation "$(build.artifactstagingdirectory)\drop\EnvironmentARMTemplate\Templates" -sqlDatabaseName "${{parameters.databaseName}}" -sqlAdministratorLoginUser "${{parameters.databaseLoginName}}" -sqlAdministratorLoginPassword "${{parameters.databaseLoginPassword}}"
          - task: AzureRmWebAppDeployment@3
            displayName: 'Azure App Service Deploy: web service'
            inputs:
              azureSubscription: 'Prasanna connection to Azure Portal'
              WebAppName: '${{parameters.serviceName}}'
              DeployToSlotFlag: true
              ResourceGroupName: '${{parameters.resourceGroupName}}'
              SlotName: '${{parameters.stagingSlotName}}'
              Package: '$(build.artifactstagingdirectory)/drop/Prasanna.Service.zip'
              RemoveAdditionalFilesFlag: true
              TakeAppOfflineFlag: true
              RenameFilesFlag: true
              JSONFiles: '**/appsettings.json'
              AppSettings: '-ASPNETCORE_ENVIRONMENT "${{parameters.ASPNETCOREEnvironmentSetting}}"'



  - deployment: DeployWebsiteApp
    displayName: "Deploy website app"
    environment: ${{parameters.environment}}
    dependsOn: 
    - DeployInfrastructureWebCore
    pool:
      vmImage: windows-latest        
    variables:
      ApplicationInsights.InstrumentationKey: ${{parameters.applicationInsightsInstrumentationKey}}
      AppSettings.Environment: ${{parameters.environment}}
      AppSettings.KeyVaultURL: ${{parameters.keyVaultURL}}
      AppSettings.ImagesStorageCDNURL: ${{parameters.imagesStorageCDNURL}}
      AppSettings.ImagesStorageURL: ${{parameters.imagesStorageURL}}
      AppSettings.PartImagesContainerName: ${{parameters.partImagesContainerName}}
      AppSettings.SetImagesContainerName: ${{parameters.setImagesContainerName}}
      AppSettings.RedisCacheConnectionString: ${{parameters.redisCacheConnectionString}}
      AppSettings.WebServiceURL: ${{parameters.serviceStagingUrl}}
      AppSettings.StorageAccountName: ${{parameters.storageAccountName}}
      AppSettings.CognitiveServicesSubscriptionKey: ${{parameters.cognitiveServicesSubscriptionKey}}
      AppSettings.CaptureStartErrors: ${{parameters.captureStartErrors}}
      ConnectionStrings.SamsAppConnectionString: ${{parameters.prasannaConnectionString}} 
    strategy:
      runOnce:
        deploy:
          steps:
          - task: DownloadBuildArtifacts@0
            displayName: 'Download the build artifacts'
            inputs:
              buildType: 'current'
              downloadType: 'single'
              artifactName: 'drop'
              downloadPath: '$(build.artifactstagingdirectory)'
          - task: AzureCLI@2
            displayName: 'Deploy infrastructure with ARM templates'
            inputs:
              azureSubscription: 'SamLearnsAzure connection to Azure Portal'
              scriptType: ps
              scriptPath: $(build.artifactstagingdirectory)\drop\EnvironmentARMTemplate\PowerShell\DeployInfrastructureWebsite.ps1
              arguments: -appPrefix "prasanna" -environment "${{parameters.environmentLowercase}}" -webAppEnvironment "${{parameters.environmentLowercase}}"  -resourceGroupName "${{parameters.resourceGroupName}}" -resourceGroupLocation "${{parameters.resourceGroupLocation}}" -resourceGroupLocationShort "${{parameters.resourceGroupLocationShort}}" -dataKeyVaultName "${{parameters.keyVaultName}}" -templatesLocation "$(build.artifactstagingdirectory)\drop\EnvironmentARMTemplate\Templates" -contactEmailAddress "samsmithnz@gmail.com" 
            enabled: true
          - task: AzureRmWebAppDeployment@3
            displayName: 'Azure App Service Deploy: website'
            inputs:
              azureSubscription: 'prasanna connection to Azure Portal'
              WebAppName: '${{parameters.websiteName}}'
              ResourceGroupName: '${{parameters.resourceGroupName}}'
              DeployToSlotFlag: true
              SlotName: '${{parameters.stagingSlotName}}'
              Package: '$(build.artifactstagingdirectory)/drop/prasanna.Web.zip'
              RemoveAdditionalFilesFlag: true
              TakeAppOfflineFlag: true
              RenameFilesFlag: true
              JSONFiles: '**/appsettings.json'
              AppSettings: '-ASPNETCORE_ENVIRONMENT "${{parameters.ASPNETCOREEnvironmentSetting}}"'
              ConfigurationSettings: '-ApplicationInsights.InstrumentationKey $(applicationInsightsInstrumentationKey) '


  

  
            
  - deployment: DeploySwapServiceAppSlots
    displayName: "Deploy swap service slots"
    environment: ${{parameters.environment}}
    dependsOn: 
    - DeployFunctionalTests
    pool:
      vmImage: windows-latest        
    strategy:
      runOnce:
        deploy:
          steps:
          - task: AzureAppServiceManage@0
            displayName: 'Swap Slots: web service'
            inputs:
              azureSubscription: 'prasanna connection to Azure Portal'
              WebAppName: '${{parameters.serviceName}}'
              ResourceGroupName: '${{parameters.resourceGroupName}}'
              SourceSlot: '${{parameters.stagingSlotName}}'

           
  


  - deployment: DeploySwapWebsiteAppSlots
    displayName: "Deploy swap website slots"
    environment: ${{parameters.environment}}
    dependsOn: 
    - DeployFunctionalTests
    pool:
      vmImage: windows-latest        
    strategy:
      runOnce:
        deploy:
          steps:
          - task: AzureAppServiceManage@0
            displayName: 'Swap Slots: website'
            inputs:
              azureSubscription: 'prasanna connection to Azure Portal'
              WebAppName: '${{parameters.websiteName}}'
              ResourceGroupName: '${{parameters.resourceGroupName}}'
              SourceSlot: '${{parameters.stagingSlotName}}'




  - deployment: DeployAppConfigurationUpdates
    displayName: "Deploy website configuration"
    environment: ${{parameters.environment}}
    dependsOn: 
    - DeploySwapWebsiteAppSlots
    pool:
      vmImage: windows-latest        
    strategy:
      runOnce:
        deploy:
          steps:
          - task: DownloadBuildArtifacts@0
            displayName: 'Download the build artifacts'
            inputs:
              buildType: 'current'
              downloadType: 'single'
              artifactName: 'drop'
              downloadPath: '$(build.artifactstagingdirectory)'
          - task: AzureCLI@2
            displayName: 'Deploy infrastructure with ARM templates'
            inputs:
              azureSubscription: 'prasanna connection to Azure Portal'
              scriptType: ps
              scriptPath: $(build.artifactstagingdirectory)\drop\EnvironmentARMTemplate\PowerShell\DeployInfrastructureWebConfiguration.ps1
              arguments: -appPrefix "samsapp" -environment "${{parameters.environmentLowercase}}" -webAppEnvironment "${{parameters.environmentLowercase}}" -resourceGroupName "${{parameters.resourceGroupName}}" -resourceGroupLocation "${{parameters.resourceGroupLocation}}" -resourceGroupLocationShort "${{parameters.resourceGroupLocationShort}}" 
            enabled: true

  